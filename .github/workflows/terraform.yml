name: "Terraform Infrastructure Change Management Pipeline with GitHub Actions"

on: 
  push: 
    branches:
    - main
    paths:
    - terraform/**
  workflow_dispatch:

env: 
  # TF_LOG: INFO
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}

  AZURE_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  AZURE_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  AZURE_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  AZURE_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}

jobs:
  Terraform:
    name: "Terraform Infrastructure Change Management"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
      - name: Checkout the repository to the runner
        uses: actions/checkout@v4

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.2
      
      - name: Terraform init
        id: init
        run: terraform init

      - name: Terraform format
        id: fmt
        run: terraform fmt -check
      
      - name: Terraform validate
        id: validate
        run: terraform validate

      - name: Terraform plan
        id: plan
        run: terraform plan -no-color -input=false
        continue-on-error: false
      
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        id: apply
        if: steps.plan.outcome == 'success'
        run: terraform apply -auto-approve -input=false
      
  GenerateDiagram:
    name: "Generate cloud diagram"
    needs: Terraform
    runs-on: ubuntu-latest
    permissions:
      contents: write
    container: 
      image: docker://ciucurdaniel/terraview:latest
    
    defaults:
      run:
        shell: bash
    
    steps:
      - name: Checkout the repository to the runner
        uses: actions/checkout@v4
        with: 
          set-safe-directory: 'true'
      
      - name: Delete old diagram
        run: |
          rm -f diagram_*.png

      - name: Generate diagram
        id: diagram
        run: |
          echo "Generating diagram"
          dot -V
          terraform version
          terraview print --help

          cd terraform && terraform init && cd ..
          terraview print ./terraform \
                          --format png \
                          --url "azurerm://${ARM_SUBSCRIPTION_ID}@terraform-state/project0terraform0state/terraform-state/project"
          
          ls diagram_*.png

      - name: Move new diagram
        run: |
          new_diagram=$(ls diagram_*.png | head -n 1)
          mv "$new_diagram" "diagram_${{ github.run_id }}.png"

      - name: Update README
        run: |
          new_diagram="diagram_${{ github.run_id }}.png"
          sed -i "s|!\[Cloud Architecture diagram\](diagram_.*\.png)|![Cloud Architecture diagram](${new_diagram})|" README.md

      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global --add safe.directory /__w/demo-company-project/demo-company-project
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add -A
          git commit -m "Update cloud architecture diagram"
          git push
