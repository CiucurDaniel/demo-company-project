name: "Terraform Infrastructure Change Management Pipeline with GitHub Actions"

on: 
  push: 
    branches:
    - main
    paths:
    - terraform/**
  workflow_dispatch:

env: 
  # TF_LOG: INFO
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}

jobs:
  Terraform:
    name: "Terraform Infrastructure Change Management"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
      - name: Checkout the repository to the runner
        uses: actions/checkout@v4

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.2
      
      - name: Terraform init
        id: init
        run: terraform init

      - name: Terraform format
        id: fmt
        run: terraform fmt -check
      
      - name: Terraform validate
        id: validate
        run: terraform validate

      - name: Terraform plan
        id: plan
        run: terraform plan -no-color -input=false
        continue-on-error: false
      
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        id: apply
        if: steps.plan.outcome == 'success'
        run: terraform apply -auto-approve -input=false
      
  GenarateDiagram:
    name: "Generate cloud diagram"
    needs: Terraform
    runs-on: ubuntu-latest
    container: 
      image: docker://ciucurdaniel/terraview:latest
    
    defaults:
      run:
        shell: bash
    
    steps:
      - name: Generate diagram
        id: diagram
        if: steps.apply.outcome == 'success'
        run: |
          echo "Generating diagram"
          dot -V
          terraform version
          terraview print --help